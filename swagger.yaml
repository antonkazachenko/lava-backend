openapi: 3.0.0
info:
  title: Topic Classifier API
  description: API for querying topics generated by the topic classifier.
  version: "1.0.0"
servers:
  - url: http://127.0.0.1:8000
paths:
  /api/groups/{group_field}/{group_value}/:
    get:
      summary: Fetch Items by Group
      description: >
        Returns all records where the specified group field matches the provided groupValue.
        Supports pagination via query parameters.
      parameters:
        - name: group_field
          in: path
          description: The field to filter by. Allowed values: topic, website_url, cleaned_website_text.
          required: true
          schema:
            type: string
            enum:
              - topic
              - website_url
              - cleaned_website_text
        - name: group_value
          in: path
          description: The value to filter by.
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: The page number (default 1).
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: The number of items per page (default 50).
          required: false
          schema:
            type: integer
            default: 50
      responses:
        "200":
          description: A list of TopicItems matching the filter.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopicItem'
        "400":
          description: Invalid input parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/items/{id}/:
    get:
      summary: Fetch a Specific Item (Detailed View)
      description: Returns all fields and details for a record identified by its unique identifier.
      parameters:
        - name: id
          in: path
          description: The unique identifier of the item.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Detailed information for the requested item.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicItem'
        "404":
          description: Item not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
  /api/random/:
    get:
      summary: Fetch 10 Random Items (Summary View)
      description: Returns a summary view of 10 random records.
      responses:
        "200":
          description: A list of 10 random TopicItem summaries.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopicItemSummary'
  /api/items/:
    get:
      summary: Fetch All Items with Pagination
      description: Returns all records with pagination support.
      parameters:
        - name: page
          in: query
          description: The page number (default 1).
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: The number of items per page (default 50).
          required: false
          schema:
            type: integer
            default: 50
      responses:
        "200":
          description: A paginated list of TopicItems.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopicItem'
components:
  schemas:
    TopicItem:
      type: object
      properties:
        id:
          type: integer
        topic:
          type: string
        website_url:
          type: string
          format: uri
        cleaned_website_text:
          type: string
      required:
        - id
        - topic
        - website_url
        - cleaned_website_text
    TopicItemSummary:
      type: object
      properties:
        id:
          type: integer
        website_url:
          type: string
          format: uri
        topic:
          type: string
        text_snippet:
          type: string
          description: A snippet of the cleaned website text.
      required:
        - id
        - website_url
        - topic
        - text_snippet
